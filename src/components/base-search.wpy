<template>
  <div class="base-search-container">
    <div class="search-wrapper">
      <label for="baseSearch" v-if="label"></label>
      <input
        auto-focus
        id="baseSearch"
        v-model="inputVal"
        @input="handleInputChange"
        placeholder="请输入要搜索的课程或老师"
        type="text"
      />
    </div>
    <span class="action-btn" @click="handleSearchBtnClick" v-if="!searchResultList">{{ actionBtn }}</span>
    <span class="action-btn" v-else @click="handleCloseClick">
      <van-icon name="cross" size="18px" />
    </span>
    <baseloading :loading="loading" :loadingText="'加载中'" />
  </div>
</template>

<style lang="less" scoped>
.van-search {
  display: block;
  width: 100%;
}
.base-search-container {
  margin: 10px 0 5px 0;
  width: 100%;
  height: 34px;
  display: flex;
  align-items: center;
  box-sizing: border-box;
  color: #323233;
  padding: 0 10px;
  .search-wrapper {
    flex: 2;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    height: 34px;
    padding: 2px 0;
    display: flex;
    background: #f7f8fa;
  }
  label {
    font-size: 14px;
    letter-spacing: 0.2px;
  }
  input {
    flex: 2;
    padding-left: 30px;
    font-size: 14px;
    border-radius: 3px;
  }
  .action-btn {
    margin-left: 10px;
    text-align: center;
    display: block;
  }
}
</style>

<script>
import wepy from '@wepy/core'
import { debounce } from '../utils/util.js'
wepy.component({
  props: {
    label: String,
    inputVal: String,
    actionBtn: String,
    searchResultList: Array
  },
  watch: {
    loading(val) {
      // console.log(val)
    },
    inputVal(val, oldVal) {
      if (val === '') {
        this.$emit('handleResultHide')
      } else if (val !== oldVal) {
        this.debounceHandleInputValChange()
      }
    }
  },
  created() {
    this.debounceHandleInputValChange = debounce(this.searchAjax, 300)
  },
  data: {
    loading: false
  },
  methods: {
    // 处理输入事件实现双向绑定
    handleInputChange(e) {
      const val = e.$wx.detail.value
      this.inputVal = val
      this.$emit('inputChange', val)
    },
    // 处理点击搜索按钮函数
    handleSearchBtnClick(e) {
      debounce(this.searchAjax, 300)
    },
    // 处理点击清除按钮函数
    handleCloseClick() {
      this.$emit('inputChange', '')
    },
    // 发送异步搜索函数
    searchAjax() {
      if (!this.inputVal) return
      console.log('搜索')
      const data = []
      if (!this.loading) {
        this.loading = true
        setTimeout(() => {
          this.loading = false
          this.handleSearchData(data)
        }, 2000)
      }
    },
    // 处理搜索结果函数
    handleSearchData(data) {
      this.$emit('handleSearchData', data)
    }
  }
})
</script>

<config>
{
    usingComponents: {
      "van-search": "./vant-weapp/search/index",
      "van-icon": "./vant-weapp/icon/index",
      "baseloading":"./base-loading",
    }
}
</config>
