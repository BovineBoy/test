<template>
  <div class="container">
    <div class="personal-data">
      <div class="left-bar">
        <button
          class="btn-login"
          v-if="!nickName"
          open-type="getUserInfo"
          bindgetuserinfo="getAuth"
        >点击登录</button>
        <div v-else class="username">{{nickName}}</div>
        <div class="city">城市： {{city}}</div>
      </div>
      <div class="right-bar">
        <div class="avatar-container">
          <image v-if="avatar" class="avatar" src="{{avatar}}" />
          <image
            v-else
            class="avatar"
            src="https://tva1.sinaimg.cn/large/00831rSTgy1gcy6nyjcyuj30oo0lht9j.jpg"
          />
        </div>
      </div>
    </div>
    <ul class="operation-list">
      <li @click="handleAccountChangeClick" class="ope-item van-hairline--bottom">
        <van-icon class="icon" name="friends-o" />
        <span>资料修改</span>
        <van-icon name="arrow" />
      </li>
      <li @click="handlePopularizeClick" class="ope-item van-hairline--bottom">
        <van-icon class="icon" name="coupon-o" />
        <span>我的推广</span>
        <van-icon name="arrow" />
      </li>
      <li @click="handleCourseClick" class="ope-item van-hairline--bottom">
        <van-icon class="icon" name="shopping-cart-o" />
        <span>我的课程</span>
        <van-icon name="arrow" />
      </li>
      <li @click="handleCollectionsClick" class="ope-item van-hairline--bottom">
        <van-icon class="icon" name="label-o" />
        <span>收藏列表</span>
        <van-icon name="arrow" />
      </li>
      <li class="ope-item">
        <van-icon class="icon" name="phone-circle-o" />
        <span @click="handleSchoolClick">校长办公室</span>
        <van-icon name="arrow" />
      </li>
    </ul>
  </div>
</template>

<script>
import wepy from '@wepy/core'
import QQMapWX from '../libs/qqmap-wx-jssdk.min.js'
const wxMap = new QQMapWX({
  key: 'K4CBZ-PZ6CD-FYL4F-H6BDV-TXGO3-3WFUG'
})

wepy.page({
  data: {
    avatar: '',
    nickName: '',
    location: '',
    city: ''
  },
  onLoad() {},
  methods: {
    getLocation() {
      wx.getLocation({
        type: 'wgs84',
        success: res => {
          const { latitude, longitude } = res
          wxMap.reverseGeocoder({
            location: {
              latitude: latitude,
              longitude: longitude
            },
            success: res => {
              const { name } = res.result.ad_info
              this.city = `${name}${res.result.address}`
            }
          })
        },
        fail: () => {
          this.getLocation()
        }
      })
    },
    getAuth() {
      wx.getStorage({
        key: 'userInfo',
        success: res => {
          const { avatarUrl, nickName } = res.data
          wx.showToast({
            title: '登录成功',
            icon: 'success',
            duration: 2000
          })
          this.avatar = avatarUrl
          this.nickName = nickName
          this.getLocation()
        },
        fail: () => {
          wx.getSetting({
            success: res => {
              if (!res.authSetting['scope.userInfo']) {
                wx.authorize({
                  scope: 'scope.userInfo',
                  success() {}
                })
              } else {
                this.getLocation()
                wx.login({
                  success: res => {
                    if (res && res.code) {
                      wx.request({
                        url:
                          'https://api.weixin.qq.com/sns/jscode2session?appid=APPID&secret=SECRET&js_code=JSCODE&grant_type=authorization_code'
                      })
                    }
                  }
                })
                wx.getUserInfo({
                  success: res => {
                    if (res && res.userInfo) {
                      const { avatarUrl, nickName } = res.userInfo
                      wx.showToast({
                        title: '登录成功',
                        icon: 'success',
                        duration: 2000
                      })
                      wx.setStorage({
                        key: 'userInfo',
                        data: res.userInfo
                      })
                      this.avatar = avatarUrl
                      this.nickName = nickName
                    }
                  }
                })
              }
            }
          })
        }
      })
    },
    getUserInfo() {
      return new Promise((resolve, reject) => {
        wx.getStorage({
          key: 'userInfo',
          success: res => {
            resolve(res)
          },
          fail: err => {
            reject(err)
          }
        })
      })
    },
    async handleAccountChangeClick() {
      this.getUserInfo()
        .then(res => {
          const { avatarUrl, nickName } = res.data
          this.$navigate({
            url: `account?avatarUrl=${avatarUrl}&nickName=${nickName}`
          })
        })
        .catch(() => {
          wx.showToast({
            title: '请登录后再试',
            icon: 'none',
            duration: 2000
          })
        })
    },
    handleSchoolClick() {
      this.$navigate({
        url: 'school'
      })
    },
    handlePopularizeClick() {
      this.getUserInfo()
        .then(res => {
          this.$navigate({
            url: 'popularize'
          })
        })
        .catch(() => {
          wx.showToast({
            title: '请登录后再试',
            icon: 'none',
            duration: 2000
          })
        })
    },
    handleCollectionsClick() {
      this.getUserInfo()
        .then(res => {
          this.$navigate({
            url: 'collections'
          })
        })
        .catch(() => {
          wx.showToast({
            title: '请登录后再试',
            icon: 'none',
            duration: 2000
          })
        })
    },
    handleCourseClick() {
      this.getUserInfo()
        .then(res => {
          this.$navigate({
            url: 'mycourse'
          })
        })
        .catch(() => {
          wx.showToast({
            title: '请登录后再试',
            icon: 'none',
            duration: 2000
          })
        })
    }
  }
})
</script>

<style lang="less" scoped>
.container {
  .personal-data {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    box-sizing: border-box;
    height: 100px;
    padding: 10px 25px;
    border-bottom: 5px solid #ccc;

    .left-bar {
      display: flex;
      flex-direction: column;
      justify-content: left;
      .btn-login {
        background: #fff;
        border: none;
        font-size: 14px;
        line-height: 1;
        &::after {
          content: none;
        }
      }
      .city {
        margin: 10px;
      }
    }

    .avatar-container {
      .avatar {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        overflow: hidden;
      }
    }
    .username {
      font-size: 16px;
      letter-spacing: 0.2px;
    }
  }
  .operation-list {
    .ope-item {
      .icon {
        font-size: 20px;
        margin-right: 10px;
      }
      display: flex;
      align-items: center;
      height: 60px;
      line-height: 60px;
      padding: 0 10px;
      & > label {
        flex: 1 1;
        font-size: 14px;
      }
    }
  }
}
</style>

<config>
{
    navigationBarTitleText: '学员中心',
    usingComponents: {
      "van-icon": "../components/vant-weapp/icon/index",
    }
}
</config>
